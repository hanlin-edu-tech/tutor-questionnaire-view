doctype html
html(lang='tw')
    head
        meta(name="viewport" content="width=device-width, initial-scale=1")
        meta(charset='UTF-8')
        meta(http-equiv='X-UA-Compatible', content='ie=edge')
        meta(http-equiv='cache-control', content='no-cache')
        meta(http-equiv='pragma', content='no-cache')
        meta(http-equiv='expires', content='0')
        link(href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" rel="stylesheet")
        title 樣板列表
    body    
        #app.container
            p
            ul.list-group  
                li.list-group-item.list-group-item-info.d-flex 
                    .col-md-4.colTitle 問卷名稱
                    .col-md-4.colTitle.author 問卷作者
                    .col-md-4.colTitle 創建時間
            ul.list-group#list             
            p
            nav
                ul.pagination.justify-content-center
        script(src="./js/navbar.js")     
        script(src="./js/dataprovider/questionnaire.js")
        script(src="./js/pagination.js")
        script. 
            (() => {
            let items = [];
            const search = (new URL(window.location)).searchParams
            const type = search.get('type');       
            async function init(){
            const navbar = document.createElement('nav-bar');
            navbar.setAttribute('current', type);
            document.querySelector('body').insertBefore(navbar, document.querySelector('#app'))
            if(type === 'template'){            
                document.querySelector('title').innerText = '樣板列表';                
                document.querySelector('.author').innerText = '問卷作者';
                items = await window.eHanlin.dataprovider.questionnaire.getTemplates();
            }else{
                document.querySelector('title').innerText = '問卷列表';            
                document.querySelector('.author').innerText = '填寫者'; 
                items = await window.eHanlin.dataprovider.questionnaire.getQuestionnaires();
            }
            let totalItems = items.length;
            initValue(items, type);
            addPageItems();
            createPagination();
            }
            init();
            })();    
