doctype html
html(lang='tw')
    head
        meta(name="viewport" content="width=device-width, initial-scale=1")
        meta(charset='UTF-8')
        meta(http-equiv='X-UA-Compatible', content='ie=edge')
        meta(http-equiv='cache-control', content='no-cache')
        meta(http-equiv='pragma', content='no-cache')
        meta(http-equiv='expires', content='0')
        link(rel='icon' type='image/png' href='./img/favicon.png')
        link(href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" rel="stylesheet")
        title

    body
        nav-bar(current="report")        
        #app.container.mt-3
            h3 報表明細
            div.datepicker
                input#datepickerLeft 
                p ~ 
                input#datepickerRight
            div
                h5 顯示資料數：
                select.countSelect(name="countMenu")
                    option(value="25") 25
                    option(value="100") 100
                    option(value="250") 250
                    option(value="500") 500
            button.export 匯出
            table.table.table-striped.table-bordered#questionList
                tr
                    //- td.table-info 題目
                    //- td.table-info(width='80') 類型
                    //- td.table-info 選項
                    //- td.table-info(width='80') 必填
    link(rel='stylesheet', href='./css/jquery-ui.min.css')
    script(src="./js/jquery-3.3.1.min.js")
    script(src="./js/jquery-ui.min.js")
    script(src="./js/jquery.table2excel.min.js")
    script(src="./js/navbar.js")
    script(src="./js/dataprovider/questionnaire.js")
    script.
      $(".export").click(function(){
          let now = new Date();
          now.setTime(now.getTime() + (8*60*60*1000));
        $("#questionList").table2excel({
            name:"Worksheet Name",
            filename:`${now.toISOString().slice(0,19).replace('T', " ")}`,
            fileext:".xls"
        });
      });

      (() => {
        $( "#datepickerLeft" ).datepicker({
            showButtonPanel: true,
            gotoCurrent : true,
            changeMonth: true,
            changeYear: true,
            dateFormat: 'yy-mm-dd' });
        $('#datepickerLeft').datepicker('setDate', 'today');
        $( "#datepickerRight" ).datepicker({
            showButtonPanel: true,
            gotoCurrent : true,
            changeMonth: true,
            changeYear: true,
            dateFormat: 'yy-mm-dd' });
        $('#datepickerRight').datepicker('setDate', 'today');
        const search = (new URL(window.location)).searchParams;
        const templateId = search.get('id');
        let count = 25;

        async function getQuestionnaireData() {
            let start = document.querySelector('#datepickerLeft').value;
            let startArr = `${start} 00:00:00`.split(/-|\s|:/);
            let startDate = new Date(startArr[0], startArr[1] -1, startArr[2], startArr[3], startArr[4], startArr[5]);
            let end = document.querySelector('#datepickerRight').value;
            let endArr = `${end} 23:59:59`.split(/-|\s|:/);
            let endDate = new Date(endArr[0], endArr[1] -1, endArr[2], endArr[3], endArr[4], endArr[5]);
            let date = {startDate: startDate, endDate: endDate};
            return await window.eHanlin.dataprovider.questionnaire.getQuestionnairesByTemplateId(templateId, count, date);
        }

        function setDate(){
            getQuestionnaireData().then(data => {
                composeTableTitle(data);
                composeTableContent(data);
            });   
        }

        function init(){
            setDate();

            document.querySelector('.countSelect').addEventListener('change', (event) => {
                count = event.target.value;
                setDate();
            });
        }

      function composeTableTitle(template){
        let table = document.querySelector('#questionList');
        table.innerHTML = "";
        let tr = document.createElement('tr');
        table.appendChild(tr);
        template[0].questions.forEach((question)=>{
                if(question.qContent!=null){
                    question.qContent.forEach((content)=>{
                        if(content.topic!="與上同題"){
                            let th = document.createElement('th');
                            th.classList.add('table-info');
                            th.innerText = topicRebuild(content.topic);
                            tr.appendChild(th);
                        }
                    });
                }else{
                    let th = document.createElement('th');
                    th.classList.add('table-info');
                    th.innerText = topicRebuild(question.topic);
                    tr.appendChild(th);
                }
            });
      }

      function topicRebuild(topic){
          let returnTopic = topic;
          if(topic.includes('${year}')){
            returnTopic = topic.replace('${year}', new Date().getFullYear()-1911);
          }
          if(topic.includes('推薦人')){
            returnTopic = "推薦人姓名(其他)";
          }
          return returnTopic;
      }

      function composeTableContent(template){
        let table = document.querySelector('#questionList');
        template.forEach((it)=>{
            let tr = document.createElement('tr');
            table.appendChild(tr);
            it.questions.forEach((question)=>{
                if(question.qContent!=null){
                    let prevTh = null;
                    question.qContent.forEach((content, index)=>{
                        if(content.topic!="與上同題"){
                            let th = document.createElement('th');
                            if(content.answer!=null)
                                th.innerText = content.answer.join(',');
                            else
                                th.innerText = "未填寫";
                            tr.appendChild(th);
                            prevTh = th;
                        }else{
                            if(content.answer!=null)
                                prevTh.innerText = `${prevTh.innerText}, ${content.answer.join(',')}`;
                            else
                                prevTh.innerText = `${prevTh.innerText}, 未填寫`;
                            tr.appendChild(prevTh);
                        }
                    });
                }else{
                    let th = document.createElement('th');
                    if(question.answer!=null)
                        th.innerText = question.answer.join(',');
                    else
                        th.innerText = "未填寫";
                    tr.appendChild(th);
                }
            });
        });
      }
      
      init();
      })();