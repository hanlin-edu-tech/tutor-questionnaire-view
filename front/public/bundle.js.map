{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/Question.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n            return ret;\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","<script>\n    export let questions\n    export let question\n\texport let index\n    // import { createEventDispatcher } from 'svelte'\n    // const dispatch = createEventDispatcher()\n</script>\n\n<style>\n\t.warning {\n\t\tborder: 1px solid #F28121\n\t}\n</style>\n\n{#if question.type === '單選題'}\n\t<div class=\"form-group\" id=\"q{index}\">\n\t\t<div class=\"form-topic\">{index+1}. {question.topic}\n\t\t\t{#if question.required === true}\n\t\t\t\t<span style=\"color: #F28121;\">*</span>\n\t\t\t{/if}\t\n\t\t</div>\n\t\t<div class=\"form-must hide\" id=\"must{index}\">*請填寫這個欄位*</div>\n\t\t<div class=\"form-item\">\n\t\t\t{#each question.options as o, j}\n\t\t\t\t<div class=\"control\">\n                    <input id=\"q{index}o{j}\" type=\"radio\" name=\"single{index}\" value=\"{o}\" bind:group=\"{questions[index].answer}\">\n\t\t\t\t\t<label for=\"q{index}o{j}\">{o}</label>\n\t\t\t\t</div>\t\n\t\t\t{/each}\n\t\t</div>\n\t</div>\n{:else if question.type === '多選題'}\n\t<div class=\"form-group\" id=\"q{index}\">\n\t\t<div style=\"display:flex\">\n\t\t\t<div class=\"form-topic\">{index+1}. {question.topic}\n\t\t\t\t{#if question.required === true}\n\t\t\t\t\t<span style=\"color: #F28121;\">*</span>\n\t\t\t\t{/if}\t\t\t\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"multiple\">\n\t\t\t\t<div class=\"multiple-text\">複選</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"form-must hide\" id=\"must{index}\">*請填寫這個欄位*</div>\n\t\t<div class=\"form-item\" id=\"multi{index}\">\n\t\t\t{#each question.options as o, j}\n\t\t\t\t<div class=\"control\">\n                    <input id=\"q{index}o{j}\" type=\"checkbox\" name=\"multi{index}\" value=\"{o}\" bind:group=\"{questions[index].answer}\">\n\t\t\t\t\t<label for=\"q{index}o{j}\">{o}</label>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t</div>\n\t</div>\n{:else}\n\t<div class=\"form-group\" id=\"q{index}\">\n\t\t<div class=\"form-topic\">{index+1}. {question.topic}\n\t\t\t{#if question.required === true}\n\t\t\t\t<span style=\"color: #F28121;\">*</span>\n\t\t\t{/if}\t\t\t\t\t\t\n\t\t</div>\n\t\t<div class=\"form-must hide\" id=\"must{index}\">*請填寫這個欄位*</div>\n\t\t<div class=\"form-item\">\t\t\t\n            <textarea placeholder=\"請填入文字\" name=\"qa{index}\" data-subject-answer=\"500\" bind:value=\"{questions[index].answer}\"></textarea>\n\t\t</div>\n\t</div>\n{/if}\n\t\t\t\t","<script>\n\timport {onMount} from 'svelte'\n\timport Question from './Question.svelte'\n\tlet template\n\tlet questionnaire = {\n\t\tstarted: null,\n\t\tfinished: null,\n\t\tquestions: [],\n\t\ttemplate: '',\n\t\tfinishMsg: '',\n\t\tcallBackUrl: ''\n\t}\n\tlet questions = new Array()\n\tlet success\n\tlet callBackUrl\n\tconst questionId = window.location.search.substring(4,window.location.search.length)\n\tonMount(async () => {\n\t\tif(window.location.protocol === \"http:\"){\n\t\t\tconst path = window.location.href.split(\":\")[1]\t\t\n\t\t\twindow.location.href = `https:${path}`\n\t\t}\n\t\tconst host = window.location.hostname\n        let contextPath = ''\n\t\tawait fetch(`https://${host}${contextPath}/questionnaire/templates/${questionId}`,{\n\t\t\tmethod: \"get\",\n\t\t\tcredentials: 'include'\n\t\t})\n\t\t.then(res => {\n\t\t\treturn res.json()\n\t\t})\n\t\t.then(data => {\n\t\t\tquestionnaire.started = new Date()\n\t\t\tquestionnaire.template = questionId\n\t\t\tquestionnaire.callBackUrl = data.callBackUrl\n\t\t\tquestionnaire.finishMsg = data.finishMsg\n\t\t\ttemplate = data\n\t\t\tconst count = data.questions.length\n\t\t\tfor(let i=0; i<count; i++){\n\t\t\t\tquestions.push({\n\t\t\t\t\t\"topic\":data.questions[i].topic,\n\t\t\t\t\t\"answer\":\"\",\n\t\t\t\t\t\"required\":data.questions[i].required,\n\t\t\t\t\t\"type\":data.questions[i].type,\n\t\t\t\t\t\"options\":data.questions[i].options\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t});\n\tfunction submit(){\t\t\n\t\t// console.log('questions: ', questionnaire.questions)\n\t\tif(!validate()){\n\t\t\tsuccess = false\n\t\t\treturn false\n\t\t}\n\t\tquestionnaire.finished = new Date()\n\t\tquestionnaire.questions = questions\t\n\t\tconvertAns()\n\t\tconst host = window.location.hostname\n        let contextPath = ''\n\t\tfetch(`https://${host}${contextPath}/questionnaire/questionnaire/create?templateId=${questionId}`,{\n\t\t\tmethod: \"post\",\n\t\t\tbody: JSON.stringify(questionnaire),\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t},\n\t\t\tcredentials: 'include'\n\t\t})\n\t\t.then(function(body){\n\t\t\tif(body.ok){\n\t\t\t\tsuccess = true\n\t\t\t\tif(questionnaire.callBackUrl.trim() !== \"\"){\n\t\t\t\t\tsetTimeout(()=>{window.location.href = questionnaire.callBackUrl}, 700)\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t})\n\t\t\n\t}\n\tfunction validate(){\n\t\tlet validate = true\n\t\tquestions.forEach((data, index) => {\n\t\t\tdocument.getElementById(\"q\"+index).classList.remove(\"invalid\")\n\t\t\tdocument.getElementById(\"must\"+index).classList.add(\"hide\")\n\t\t\tif(data.required === true){\n\t\t\t\tif(data.type === '問答題' && data.answer.trim() === \"\"){\t\t\t\t\t\n\t\t\t\t\twarning(index)\n\t\t\t\t\tvalidate = false\n\t\t\t\t}else if(data.type === '多選題' && data.answer.length === 0 ){\n\t\t\t\t\twarning(index)\n\t\t\t\t\tvalidate = false\n\t\t\t\t}else{\n\t\t\t\t\tif(data.answer === \"\"){\n\t\t\t\t\t\twarning(index)\n\t\t\t\t\t\tvalidate = false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(data.required === true){\n\t\t\t\tif(data.type === '問答題' && data.answer.trim() === \"\"){\t\t\t\t\t\n\t\t\t\t\twarning(index)\n\t\t\t\t\tvalidate = false\n\t\t\t\t}else if(data.type === '多選題' && data.answer.length === 0 ){\n\t\t\t\t\twarning(index)\n\t\t\t\t\tvalidate = false\n\t\t\t\t}else{\n\t\t\t\t\tif(data.answer === \"\"){\n\t\t\t\t\t\twarning(index)\n\t\t\t\t\t\tvalidate = false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(data.required === true){\n\t\t\t\tif(data.type === '問答題' && data.answer.trim() === \"\"){\t\t\t\t\t\n\t\t\t\t\twarning(index)\n\t\t\t\t\tvalidate = false\n\t\t\t\t}else if(data.type === '多選題' && data.answer.length === 0 ){\n\t\t\t\t\twarning(index)\n\t\t\t\t\tvalidate = false\n\t\t\t\t}else{\n\t\t\t\t\tif(data.answer === \"\"){\n\t\t\t\t\t\twarning(index)\n\t\t\t\t\t\tvalidate = false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(data.required === true){\n\t\t\t\tif(data.type === '問答題' && data.answer.trim() === \"\"){\t\t\t\t\t\n\t\t\t\t\twarning(index)\n\t\t\t\t\tvalidate = false\n\t\t\t\t}else if(data.type === '多選題' && data.answer.length === 0 ){\n\t\t\t\t\twarning(index)\n\t\t\t\t\tvalidate = false\n\t\t\t\t}else{\n\t\t\t\t\tif(data.answer === \"\"){\n\t\t\t\t\t\twarning(index)\n\t\t\t\t\t\tvalidate = false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(data.required === true){\n\t\t\t\tif(data.type === '問答題' && data.answer.trim() === \"\"){\t\t\t\t\t\n\t\t\t\t\twarning(index)\n\t\t\t\t\tvalidate = false\n\t\t\t\t}else if(data.type === '多選題' && data.answer.length === 0 ){\n\t\t\t\t\twarning(index)\n\t\t\t\t\tvalidate = false\n\t\t\t\t}else{\n\t\t\t\t\tif(data.answer === \"\"){\n\t\t\t\t\t\twarning(index)\n\t\t\t\t\t\tvalidate = false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn validate\n\t}\n\n\tfunction warning(index){\n\t\tdocument.getElementById(\"q\"+index).classList.add(\"invalid\")\n\t\tdocument.getElementById(\"must\"+index).classList.remove(\"hide\")\n\t}\n\n\tfunction convertAns(){\n\t\tquestions.forEach(data => {\n\t\t\tif(!Array.isArray(data.answer)){\n\t\t\t\tdata.answer = [data.answer]\n\t\t\t}\n\t\t})\n\t}\n</script>\n<style>\n\t.container {\n\t\twidth: 980px;\n\t\tmargin: 0 auto;\n\t\tbackground-color: rgba(255, 255, 255, 0.685);\n\t}\n\t#main {\n\t\tdisplay: flex;\n\t}\n</style>\n<svelte:head>\n\t{#if template}\n\t\t<title>{template.name}</title>\n\t{:else}\n\t\t<title>問卷</title>\n\t{/if}\n</svelte:head>\n\n<div id=\"main\">\n\t{#if template}\n\t\t<div class=\"container\">\n\t\t\t<div class=\"alert\">\n\t\t\t\t<div class=\"form-title\">{template.name}</div>\n\t\t\t\t<div class=\"form-content\">{template.description}</div>\n\t\t\t</div>\n\t\t\t<form action=\"\" id=\"form\">\n\t\t\t\t<div class=\"form-body\">\n\t\t\t\t{#each template.questions as q, i}\n\t\t\t\t\t<Question question=\"{q}\" index=\"{i}\" questions=\"{questions}\"/>\n\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row-btn\" style=\"margin-bottom:10px;\">\n\t\t\t\t\t<div class=\"btn-send\" on:click=\"{submit}\">送出</div>\n\t\t\t\t</div>\t\t\n\t\t\t</form>\n\t\t</div>\n\t\t<!-- 成功畫面-->\n\t\t{#if success === true}\n\t\t\t<div class=\"modal-success\">\n\t\t\t\t<div class=\"modal-body\">\n\t\t\t\t\t<div class=\"success-banner\"></div>\n\t\t\t\t\t<div class=\"success-text\">送出成功</div>\n\t\t\t\t\t{#if template.finishMsg}\n\t\t\t\t\t\t<div class=\"success-content\">{template.finishMsg}</div>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/if}\n\t{:else}\n\t\tloading\t\t\n\t{/if}\n</div>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_data","set_input_value","input","set_style","key","important","style","setProperty","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","update","pop","callback","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","globals","window","global","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","init","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","callbacks","ready","ret","hydrate","l","Array","from","childNodes","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","question","topic","required","questions","answer","j","group","checked","__value","template","description","success","submit","q","finishMsg","warning","getElementById","classList","remove","questionnaire","started","finished","callBackUrl","questionId","location","search","substring","async","protocol","path","href","split","host","hostname","fetch","method","credentials","res","json","Date","count","validate","trim","isArray","body","JSON","stringify","headers","content-type","ok","setTimeout"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EA6GhF,SAASE,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAEhC,SAASQ,EAAaC,EAAYC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,GAAK,EACpCF,EAAWE,IACXF,EAAWE,GAAGE,EAAEH,GAG5B,SAASI,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAqBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAEhB,SAASI,IACL,OAAOJ,EAAK,IAEhB,SAASK,EAAOvB,EAAMwB,EAAOC,EAASC,GAElC,OADA1B,EAAK2B,iBAAiBH,EAAOC,EAASC,GAC/B,IAAM1B,EAAK4B,oBAAoBJ,EAAOC,EAASC,GAuB1D,SAASG,EAAK7B,EAAM8B,EAAWC,GACd,MAATA,EACA/B,EAAKgC,gBAAgBF,GAErB9B,EAAKiC,aAAaH,EAAWC,GA+ErC,SAASG,EAAShB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKC,OAASA,IACdD,EAAKC,KAAOA,GAEpB,SAASgB,EAAgBC,EAAOL,IACf,MAATA,GAAiBK,EAAML,SACvBK,EAAML,MAAQA,GAWtB,SAASM,EAAUrC,EAAMsC,EAAKP,EAAOQ,GACjCvC,EAAKwC,MAAMC,YAAYH,EAAKP,EAAOQ,EAAY,YAAc,IAmNjE,IAAIG,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,EAUxB,SAASC,EAAQ3D,IARjB,WACI,IAAKwD,EACD,MAAM,IAAII,MAAM,oDACpB,OAAOJ,GAMPK,GAAwBC,GAAGC,SAASC,KAAKhE,GAsC7C,MAAMiE,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBzE,GACzBmE,EAAiBH,KAAKhE,GAK1B,SAAS0E,IACL,MAAMC,EAAiB,IAAIC,IAC3B,EAAG,CAGC,KAAOX,EAAiBvC,QAAQ,CAC5B,MAAMgC,EAAYO,EAAiBY,QACnCpB,EAAsBC,GACtBoB,EAAOpB,EAAUI,IAErB,KAAOI,EAAkBxC,QACrBwC,EAAkBa,KAAlBb,GAIJ,IAAK,IAAIzC,EAAI,EAAGA,EAAI0C,EAAiBzC,OAAQD,GAAK,EAAG,CACjD,MAAMuD,EAAWb,EAAiB1C,GAC7BkD,EAAeM,IAAID,KACpBA,IAEAL,EAAeO,IAAIF,IAG3Bb,EAAiBzC,OAAS,QACrBuC,EAAiBvC,QAC1B,KAAO0C,EAAgB1C,QACnB0C,EAAgBW,KAAhBX,GAEJI,GAAmB,EAEvB,SAASM,EAAOhB,GACRA,EAAGqB,WACHrB,EAAGgB,OAAOhB,EAAGsB,OACbhF,EAAQ0D,EAAGuB,eACXvB,EAAGqB,SAASG,EAAExB,EAAGsB,MAAOtB,EAAGyB,KAC3BzB,EAAGsB,MAAQ,KACXtB,EAAG0B,aAAalF,QAAQmE,IAiBhC,MAAMgB,EAAW,IAAIb,IACrB,IAAIc,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACHP,EAAGI,GAGX,SAASI,IACAJ,EAAOE,GACRxF,EAAQsF,EAAOG,GAEnBH,EAASA,EAAOJ,EAEpB,SAASS,EAAcC,EAAOC,GACtBD,GAASA,EAAMvE,IACfgE,EAASS,OAAOF,GAChBA,EAAMvE,EAAEwE,IAGhB,SAASE,EAAeH,EAAOC,EAAO9E,EAAQ6D,GAC1C,GAAIgB,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAASR,IAAIe,GACb,OACJP,EAASP,IAAIc,GACbN,EAAOG,EAAE7B,KAAK,KACVyB,EAASS,OAAOF,GACZhB,IACI7D,GACA6E,EAAMrE,EAAE,GACZqD,OAGRgB,EAAMI,EAAEH,IA8RhB,MAAMI,EAA6B,oBAAXC,OAAyBA,OAASC,OAoP1D,SAASC,EAAgB9C,EAAW7C,EAAQI,GACxC,MAAMkE,SAAEA,EAAQpB,SAAEA,EAAQ0C,WAAEA,EAAUjB,aAAEA,GAAiB9B,EAAUI,GACnEqB,EAASuB,EAAE7F,EAAQI,GAEnBwD,EAAoB,KAChB,MAAMkC,EAAiB5C,EAAS6C,IAAI7G,GAAK8G,OAAOtG,GAC5CkG,EACAA,EAAWzC,QAAQ2C,GAKnBvG,EAAQuG,GAEZjD,EAAUI,GAAGC,SAAW,KAE5ByB,EAAalF,QAAQmE,GAEzB,SAASqC,EAAkBpD,EAAWlC,GAC9BkC,EAAUI,GAAGqB,WACb/E,EAAQsD,EAAUI,GAAG2C,YACrB/C,EAAUI,GAAGqB,SAASxD,EAAEH,GAGxBkC,EAAUI,GAAG2C,WAAa/C,EAAUI,GAAGqB,SAAW,KAClDzB,EAAUI,GAAGyB,IAAM,IAG3B,SAASwB,EAAWrD,EAAWN,GACtBM,EAAUI,GAAGsB,QACdnB,EAAiBD,KAAKN,GAtpBrBc,IACDA,GAAmB,EACnBH,EAAiB2C,KAAKtC,IAspBtBhB,EAAUI,GAAGsB,MAAQnF,KAEzByD,EAAUI,GAAGsB,MAAMhC,IAAO,EAE9B,SAAS6D,EAAKvD,EAAWlB,EAAS0E,EAAUC,EAAiBC,EAAWC,GACpE,MAAMC,EAAmB9D,EACzBC,EAAsBC,GACtB,MAAM6D,EAAQ/E,EAAQ+E,OAAS,GACzBzD,EAAKJ,EAAUI,GAAK,CACtBqB,SAAU,KACVI,IAAK,KAELgC,MAAOF,EACPvC,OAAQhF,EACRsH,UAAAA,EACAI,MAAOvH,IAEP8D,SAAU,GACV0C,WAAY,GACZpB,cAAe,GACfG,aAAc,GACdiC,QAAS,IAAIC,IAAIJ,EAAmBA,EAAiBxD,GAAG2D,QAAU,IAElEE,UAAW1H,IACXmF,MAAO,MAEX,IAAIwC,GAAQ,EAj/BhB,IAAkBhG,EAk/BdkC,EAAGyB,IAAM2B,EACHA,EAASxD,EAAW6D,EAAO,CAACnE,EAAKyE,EAAKhF,EAAQgF,KACxC/D,EAAGyB,KAAO6B,EAAUtD,EAAGyB,IAAInC,GAAMU,EAAGyB,IAAInC,GAAOP,KAC3CiB,EAAG0D,MAAMpE,IACTU,EAAG0D,MAAMpE,GAAKP,GACd+E,GACAb,EAAWrD,EAAWN,IAEvByE,IAETN,EACNzD,EAAGgB,SACH8C,GAAQ,EACRxH,EAAQ0D,EAAGuB,eACXvB,EAAGqB,SAAWgC,EAAgBrD,EAAGyB,KAC7B/C,EAAQ3B,SACJ2B,EAAQsF,QAERhE,EAAGqB,SAAS4C,GApgCNnG,EAogCiBY,EAAQ3B,OAngChCmH,MAAMC,KAAKrG,EAAQsG,cAugClBpE,EAAGqB,SAASU,IAEZrD,EAAQ2F,OACRpC,EAAcrC,EAAUI,GAAGqB,UAC/BqB,EAAgB9C,EAAWlB,EAAQ3B,OAAQ2B,EAAQvB,QACnDyD,KAEJjB,EAAsB6D,GAsC1B,MAAMc,EACFC,WACIvB,EAAkBwB,KAAM,GACxBA,KAAKC,SAAWzI,EAEpBuI,IAAIG,EAAMxD,GACN,MAAM2C,EAAaW,KAAKxE,GAAG6D,UAAUa,KAAUF,KAAKxE,GAAG6D,UAAUa,GAAQ,IAEzE,OADAb,EAAU3D,KAAKgB,GACR,KACH,MAAMyD,EAAQd,EAAUe,QAAQ1D,IACjB,IAAXyD,GACAd,EAAUgB,OAAOF,EAAO,IAGpCJ,qMCjxCuBI,MAAM,SAAKG,SAASC,YACjB,MAAtBD,SAASE,qOAIsBL,sDAEYA,4GARpBA,kKAQmEM,YAAUN,OAAOO,kCAPxFP,MAAM,mCAAKG,SAASC,mBACjB,MAAtBD,SAASE,kFAIsBL,kDAE2DM,YAAUN,OAAOO,+BAAhEP,4CARpBA,yGArBHA,MAAM,SAAKG,SAASC,YACjB,MAAtBD,SAASE,sBAWRF,SAASpG,6BAAdd,sPAAAA,+IAFkC+G,qDACJA,kDAbJA,kJAc1B/G,wDAZuB+G,MAAM,mCAAKG,SAASC,mBACjB,MAAtBD,SAASE,kFASqBL,oEAE7BG,SAASpG,gBAAdd,4FAAAA,wBAAAA,SAAAA,iCAD8B+G,0CAbJA,oGAhBJA,MAAM,SAAKG,SAASC,YACjB,MAAtBD,SAASE,sBAMPF,SAASpG,6BAAdd,wKAAAA,iGAFkC+G,2EANRA,6HAQ1B/G,wDAPsB+G,MAAM,mCAAKG,SAASC,mBACjB,MAAtBD,SAASE,kFAIsBL,oEAE7BG,SAASpG,gBAAdd,4FAAAA,wBAAAA,SAAAA,6BAR0B+G,0UAkCCrC,uHADCqC,YAAQQ,iDAAgCR,qBAAgBrC,sCACtEqC,YAAQQ,wGAD+EF,YAAUN,OAAOO,oGAAjBD,YAAUN,OAAOO,iDAA1FP,YAAQQ,0CAAgCR,2CAAgBrC,yDACzDA,oCAAbqC,YAAQQ,uQAvBK7C,uHADCqC,YAAQQ,+CAA8BR,qBAAgBrC,sCACpEqC,YAAQQ,iHAD6EF,YAAUN,OAAOO,4FAAjBD,YAAUN,OAAOO,8BAAxFP,YAAQQ,2CAA8BR,2CAAgBrC,yDACvDA,oCAAbqC,YAAQQ,gJAZJ,UAAlBL,SAASJ,OAiBc,UAAlBI,SAASJ,kNA9BR,cAAIO,EAASH,SACTA,EAAQH,MACXA,wUDiPZ,SAAiCS,GAC7B,MAAMrG,EAAQ,GACd,IAAK,IAAIpB,EAAI,EAAGA,EAAIyH,EAAMxH,OAAQD,GAAK,EAC/ByH,EAAMzH,GAAG0H,SACTtG,EAAMmB,KAAKkF,EAAMzH,GAAG2H,SAE5B,OAAOvG,6ZEnEDwG,SAASxH,wKAUUwH,SAASxH,YACPwH,SAASC,uBAI7BD,SAASN,+BAAdrH,6EAUa,MAAZ6H,uIAVD7H,iWAKgC8H,wGALhC9H,uHALuB2H,SAASxH,0CACPwH,SAASC,+DAI7BD,SAASN,kBAAdrH,uHAAAA,WAAAA,sBAUa,MAAZ6H,uGAVD7H,oEAAAA,+HACoB+H,UAAYhI,cAAgBsH,2GAA5BU,gIAchBJ,SAAkB,gTAAlBA,SAASK,wHACiBL,SAASK,8HAATL,SAASK,8FAhCvCL,2EAQAA,keAhCL,SAASM,GAAQlB,GAChB3G,SAAS8H,eAAe,IAAInB,GAAOoB,UAAU3E,IAAI,WACjDpD,SAAS8H,eAAe,OAAOnB,GAAOoB,UAAUC,OAAO,2BA7JxD,IAAIT,EAUAE,EATAQ,EAAgB,CACnBC,QAAS,KACTC,SAAU,KACVlB,UAAW,GACXM,SAAU,GACVK,UAAW,GACXQ,YAAa,IAEVnB,EAAY,IAAIf,MAGpB,MAAMmC,EAAa7D,OAAO8D,SAASC,OAAOC,UAAU,EAAEhE,OAAO8D,SAASC,OAAO3I,eAC7EiC,EAAQ4G,UACP,GAAgC,UAA7BjE,OAAO8D,SAASI,SAAqB,CACvC,MAAMC,EAAOnE,OAAO8D,SAASM,KAAKC,MAAM,KAAK,GAC7CrE,OAAO8D,SAASM,cAAgBD,IAEjC,MAAMG,EAAOtE,OAAO8D,SAASS,eAEvBC,iBAAiBF,6BAA8CT,IAAa,CACjFY,OAAQ,MACRC,YAAa,YAEbhE,KAAKiE,GACEA,EAAIC,QAEXlE,KAAK/E,IACL8H,EAAcC,QAAU,IAAImB,KAC5BpB,EAAcV,SAAWc,EACzBJ,EAAcG,YAAcjI,EAAKiI,YACjCH,EAAcL,UAAYzH,EAAKyH,uBAC/BL,EAAWpH,GACX,MAAMmJ,EAAQnJ,EAAK8G,UAAUrH,OAC7B,IAAI,IAAID,EAAE,EAAGA,EAAE2J,EAAO3J,IACrBsH,EAAU/E,KAAK,CACd6E,MAAQ5G,EAAK8G,UAAUtH,GAAGoH,MAC1BG,OAAS,GACTF,SAAW7G,EAAK8G,UAAUtH,GAAGqH,SAC7BN,KAAOvG,EAAK8G,UAAUtH,GAAG+G,KACzBhG,QAAUP,EAAK8G,UAAUtH,GAAGe,uDAKhC,WAEC,IA6BD,WACC,IAAI6I,GAAW,EA2Ef,OA1EAtC,EAAUzI,QAAQ,CAAC2B,EAAMwG,KACxB3G,SAAS8H,eAAe,IAAInB,GAAOoB,UAAUC,OAAO,WACpDhI,SAAS8H,eAAe,OAAOnB,GAAOoB,UAAU3E,IAAI,SAC/B,IAAlBjD,EAAK6G,WACU,QAAd7G,EAAKuG,MAAyC,KAAvBvG,EAAK+G,OAAOsC,QACrC3B,GAAQlB,GACR4C,GAAW,GACW,QAAdpJ,EAAKuG,MAAyC,IAAvBvG,EAAK+G,OAAOtH,QAC3CiI,GAAQlB,GACR4C,GAAW,GAEQ,KAAhBpJ,EAAK+G,SACPW,GAAQlB,GACR4C,GAAW,KAIO,IAAlBpJ,EAAK6G,WACU,QAAd7G,EAAKuG,MAAyC,KAAvBvG,EAAK+G,OAAOsC,QACrC3B,GAAQlB,GACR4C,GAAW,GACW,QAAdpJ,EAAKuG,MAAyC,IAAvBvG,EAAK+G,OAAOtH,QAC3CiI,GAAQlB,GACR4C,GAAW,GAEQ,KAAhBpJ,EAAK+G,SACPW,GAAQlB,GACR4C,GAAW,KAIO,IAAlBpJ,EAAK6G,WACU,QAAd7G,EAAKuG,MAAyC,KAAvBvG,EAAK+G,OAAOsC,QACrC3B,GAAQlB,GACR4C,GAAW,GACW,QAAdpJ,EAAKuG,MAAyC,IAAvBvG,EAAK+G,OAAOtH,QAC3CiI,GAAQlB,GACR4C,GAAW,GAEQ,KAAhBpJ,EAAK+G,SACPW,GAAQlB,GACR4C,GAAW,KAIO,IAAlBpJ,EAAK6G,WACU,QAAd7G,EAAKuG,MAAyC,KAAvBvG,EAAK+G,OAAOsC,QACrC3B,GAAQlB,GACR4C,GAAW,GACW,QAAdpJ,EAAKuG,MAAyC,IAAvBvG,EAAK+G,OAAOtH,QAC3CiI,GAAQlB,GACR4C,GAAW,GAEQ,KAAhBpJ,EAAK+G,SACPW,GAAQlB,GACR4C,GAAW,KAIO,IAAlBpJ,EAAK6G,WACU,QAAd7G,EAAKuG,MAAyC,KAAvBvG,EAAK+G,OAAOsC,QACrC3B,GAAQlB,GACR4C,GAAW,GACW,QAAdpJ,EAAKuG,MAAyC,IAAvBvG,EAAK+G,OAAOtH,QAC3CiI,GAAQlB,GACR4C,GAAW,GAEQ,KAAhBpJ,EAAK+G,SACPW,GAAQlB,GACR4C,GAAW,MAKRA,EAzGHA,GAEH,mBADA9B,GAAU,IACH,EAERQ,EAAcE,SAAW,IAAIkB,KAC7BpB,EAAchB,UAAYA,EA6G1BA,EAAUzI,QAAQ2B,IACb+F,MAAMuD,QAAQtJ,EAAK+G,UACtB/G,EAAK+G,OAAS,CAAC/G,EAAK+G,WA7GtB,MAAM4B,EAAOtE,OAAO8D,SAASS,SAE7BC,iBAAiBF,mDAAoET,IAAa,CACjGY,OAAQ,OACRS,KAAMC,KAAKC,UAAU3B,GACrB4B,QAAS,CACRC,eAAgB,oBAEjBZ,YAAa,YAEbhE,KAAK,SAASwE,GACXA,EAAKK,iBACPtC,GAAU,GAC8B,KAArCQ,EAAcG,YAAYoB,QAC5BQ,WAAW,KAAKxF,OAAO8D,SAASM,KAAOX,EAAcG,aAAc,iBCrE5D,kEAAQ,CACnBrJ,OAAQiB,SAAS0J,KACjBjE,MAAO,CACN1F,KAAM"}